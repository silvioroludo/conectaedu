CRIAR APLICATIVO EM REACT:

npx create-react-app


--------


ABRIR PASTA NO VSCODE:

cd até a pasta

code .


-------

ÍCONES:

https://react-icons.github.io/react-icons/icons?name=hi

cd até a pasta

npm install react-icons --save


colar o código do ícone e da licensa de acordo com a doc

--------

VISÃO GERAL DOM E ESTILIZAÇÃO:

https://pt-br.reactjs.org/docs/dom-elements.html


------

DEGRADÊ:

https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient

-------

CSS USANDO OS TYPES:

input[type=text], input[type=password]
{
    border:none;
    border-bottom: 1px solid lightgray;
}

------

REMOVER BORDA ON FOCUS NO CSS

textarea:focus, input:focus {
    outline: none;
}

------

quebrar linha <br>

------

animações em css para react js

https://reactjsexample.com/tag/animation/

https://formidable.com/open-source/react-animations/

https://animate.style/

-----

PLANEJAMENTO:

https://whimsical.com/a

------

JORNADA DE APRENDIZADO:

https://www.youtube.com/watch?v=Ab-kGzlCCWI


- Aprenda React Hooks, ao menos useState e useEffect (facil)
- Aprenda a codar em Typescript (intermediario, dependendo do seu conhecimento previo)
- Aprenda a usar a usar o react-router-dom (facil)
- Aprenda styled components e variant (intermediario, dependendo do seu conhecimento de CSS)
- Aprenda a se conectar em alguma API (intermediario/avancado)
- Aprenda a controlar login e permissoes baseado em um usuario logado (intermediario/avancado)



-------

ROTAS E NAVEGAÇÃO:

https://www.youtube.com/watch?v=rRGYKT0XdCQ

https://www.youtube.com/watch?v=Yey6nTwqUok


-------

API INSTA

https://developers.facebook.com/docs/instagram

---- 

FIXAR NO TOPO

.header {
position: fixed;
z-index: 999;
top: 0;
right: 0;
height 70px;
display: flex;
justify-content: space-between;
}

----

FORMATO DE IFS

 const [blackHeader, setblackHeader ] = useState(false);
 className={black ? 'menutopo' : ''}

 ----

 ESPAÇAMENTO ENTRE ELEMENTOS:

 gap: 16px;
 display: flex;

 -----

 COMO USAR O GIT|

 https://docs.github.com/pt/get-started/quickstart/create-a-repo

 -----

COMENTAR VÁRIAS LINHAS

SHIF + ALT + A


--------

SELECIONAR E EDITAR LINHAS:

SEGURA ALT E CLICA NAS LINHAS 
CTRL +L PARA SELECIONAR A LINHA TODA


-------

GRID COLUMNS:

/* valores padrão */
grid-template-columns: none;

/* exemplos de <track-list> */
grid-template-columns: 100px 1fr;
grid-template-columns: [linename] 100px;
grid-template-columns: [linename1] 100px [linename2 linename3];
grid-template-columns: minmax(100px, 1fr);
grid-template-columns: fit-content(40%);
grid-template-columns: repeat(3, 200px);

/* exemplos de <auto-track-list> */
grid-template-columns: 200px repeat(auto-fill, 100px) 300px;
grid-template-columns: minmax(100px, max-content)
                       repeat(auto-fill, 200px) 20%;
grid-template-columns: [linename1] 100px [linename2]
                       repeat(auto-fit, [linename3 linename4] 300px)
                       100px;
grid-template-columns: [linename1 linename2] 100px
                       repeat(auto-fit, [linename1] 300px) [linename3];

/* definições de herança */
grid-template-columns: inherit;
grid-template-columns: initial;
grid-template-columns: unset


--------

FLEX BOX 

https://www.youtube.com/watch?v=dUkkOdhyO1w

-------

alignitems:

flex-end alinha no final
flex-start alinha no começo

--------

GRID SHIT AGAIN:

https://www.w3schools.com/css/css_grid.asp


------

TRANSIÇÕES LINEARES:

transition-property
transition-duration
transition-timing-function: linear, ease, ease-in, ease-out e ease-in-out;
transition-delay

https://tableless.com.br/transition-e-animation/

---------
ONCLICK E HANDLING EVENTS

https://pt-br.reactjs.org/docs/handling-events.html

https://www.youtube.com/watch?v=s2tsCGLzpOM

https://www.youtube.com/watch?v=kt8v7GdW0kI


function Form() {
  function handleSubmit(e) {
    e.preventDefault();
    console.log('Você clicou em enviar.');
  }

OU 

const [isOn, setIsOn] = useState(false);

const likesClick = () => {
setIsOn(!isOn);
};


<button className={`${isOn ? "on" : "off"`}
                    onClick={likesClick} />
------------

OPÇÕES:

<select>
<option>
</select>


-------

LEMBRETE:
APRENDER GATSBY E MATERIAL UI

------

SUBIR REACT NO GIT PAGES:

https://www.youtube.com/watch?v=c-CLMQk8N9k

npm run build

pack-jason : "homepage":"./" (abaixo de version)


--------


https://www.youtube.com/watch?v=P9ELDeqNToo

NOMES ALEATÓRIOS JAVASCRIPT:

const handleNameChange = () => {
const names = ['Bob', 'Kevin', 'Dave'];
const nome = Math.floor(Math.random() * 3);
return names[int];
}


NOMES ALEATÓRIOS REACT: (HOOKS) 

import {useState } from 'react';
const [name, setName] = useState('Dave');

const handleNameChange = () => {
const names = ['Bob', 'Kevin', 'Dave'];
const nome = Math.floor(Math.random() * 3);
setName(names[int])
}

<div> Hello World {name}</div>


CONTAGEM REACT C/ HOOKS:

const [count, setCount] = useState(0); //0 é o estado incial

const handleClick = () => { 
setCount (count + 1)
console.log(count)
};

<div onClick={handleClick}> {count} </div>


------------- 



https://www.youtube.com/watch?v=Fcj6DQT3nVA&t=65s

LISTS AND KEYS:


const [items, setItems] = useState([

{ id: 1,
checked: false,
item: "Um quilo de batata" },

{ id: 2,
checked: false,
item: "Item 2" },

{ id: 2,
checked: false,
item: "Item 2" },

]};


const handleCheck = (id) = > {

const listItems = items.map ((item) =>
item.id === id ? {...item, checked: !item.checked} : item);

setItems(listItems);

}




(renderizando):

<main>  
<ul>

{items.map((item) => (

<li className="item" key={item.id}>

<input type="checkbox"
onChange={() => handleCheck(item.id)}
checked={item.checked}/>

<label> {item.item} </label>


<BsHeart role="button" tabIndex="0"/>

</li>


))}

</ul>
</main>


----------

TRANSFORMAR ICONE EM BOTÃO:

<BsHeart role="button" tabIndex="0"/>

-----------

REMOVER SERRILHADO CSS:

-webkit-font-smoothing: antialiased;
-moz-osx-font-smoothing: grayscale;

----------

CSS NO ÍCONE:

.nome svg:hover {

}

--------

CRIAÇÃO DE POPUPS:

https://www.youtube.com/watch?v=i8fAO_zyFAM



-------

ATALHOS:

Criar pasta com arquivo dentro: nomedapasta/nomedoarquivo 

Criar componente react: rcfce

Usar mesma classe: classname"nomedaclasse-inner"


--------

SISTEMA DE UPLOADS DE ARQUIVOS:

drag and drop:
https://react-dropzone.js.org/

------

STYLED COMPONENTS E CSS GLOBAL:

https://www.youtube.com/watch?v=G5UZmvkLWSQ


--------

MELHORAR TEXTO:

text-rendering: optimizeLegibility;
-webkit-font-smoothing: antialiased;

-------

BORDA DIFERENTE:

border: 1px dashed #ddd;

-------

ANIMAÇÃO:

transition: heigh 0.2s ease;


--------

LOADING / BARRA DE PROGRESSO:

CIRCULARPROGRESSBAR


--------


APLICAR CSS NA SEGUNDA LI DE UMA LISTA:

& + li {
  margin:0px;
}



---------------

ALINHAMENTO NO GRID:

display: grid;
place-items: center;